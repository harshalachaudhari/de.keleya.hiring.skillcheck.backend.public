{
	"info": {
		"_postman_id": "ff34055f-0df6-4dee-8af0-89a07d200324",
		"name": "Hiring Backend Test-local",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9754551"
	},
	"item": [
		{
			"name": "As User",
			"item": [
				{
					"name": "Find only current user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Value should be 2\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJiYXJ0QHNlZWQuY29tIiwiaWF0IjoxNjY0Mjk4NDc5LCJleHAiOjE2NjQyOTg3MTl9.oIwoh2rotELXUu66E-kfXQtSkpynzQXtYHbiAkGAY1A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ignore search for other",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"Value should be 1\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData[0].id).to.eql(1);",
									"// });",
									"",
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJiYXJ0QHNlZWQuY29tIiwiaWF0IjoxNjY0Mjk3MjYwLCJleHAiOjE2NjQyOTczODB9.BZp3yhOjI31p-JPqPjx065UDrPEEP2uuyg-VvOjlKrQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user?id=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail get on other id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get own user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJiYXJ0QHNlZWQuY29tIiwiaWF0IjoxNjY0Mjk4NDc5LCJleHAiOjE2NjQyOTg3MTl9.oIwoh2rotELXUu66E-kfXQtSkpynzQXtYHbiAkGAY1A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update own name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Name is updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('new name');",
									"});",
									"",
									"pm.test(\"Updated At != Created At\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.updated_at).to.not.eql(jsonData.created_at);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJiYXJ0QHNlZWQuY29tIiwiaWF0IjoxNjY0Mjk4NDc5LCJleHAiOjE2NjQyOTg3MTl9.oIwoh2rotELXUu66E-kfXQtSkpynzQXtYHbiAkGAY1A",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 2,\n    \"name\": \"new name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has credentials\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.credentials).to.exist;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"email\": \"bart@seed.com\",\n    \"password\": \"Password@123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user/authenticate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"});",
									"",
									"pm.test(\"Is JWT token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.contain('eyJ');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"email\": \"bart@seed.com\",\n    \"password\": \"Password@123\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/user/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJiYXJ0QHNlZWQuY29tIiwiaWF0IjoxNjY0Mjk4NDc5LCJleHAiOjE2NjQyOTg3MTl9.oIwoh2rotELXUu66E-kfXQtSkpynzQXtYHbiAkGAY1A",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user/validate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"validate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "As Admin",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.globals.get(\"jwt_token\", response.token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"});",
									"",
									"pm.test(\"Is JWT token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.contain('eyJ');",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"email\": \"lisa@seed.com\",\n\t\"password\": \"Password@123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.globals.get(\"jwt_token\", response.token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJsaXNhQHNlZWQuY29tIiwiaWF0IjoxNjY0MzAwNDEwLCJleHAiOjE2NjQzMDA2NTB9.xknMyqCwgBH18uZV9Drru2dRxAQGQyiE7C_Gjhl4m9Q",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user/validate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.get(\"jwt_token\");",
									"",
									"pm.test(\"Should return array of all user\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"    pm.expect(jsonData.length).to.gt(1);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJsaXNhQHNlZWQuY29tIiwiaWF0IjoxNjY0MzAwNDEwLCJleHAiOjE2NjQzMDA2NTB9.xknMyqCwgBH18uZV9Drru2dRxAQGQyiE7C_Gjhl4m9Q",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all users containing ma in name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return array of users\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"    pm.expect(jsonData.length).to.gt(1);",
									"});",
									"",
									"pm.test(\"Names should contain 'ma'\", function () {",
									"    var jsonData = pm.response.json();",
									"    for(var item of jsonData) {",
									"        pm.expect(item.name).to.contain('ma')",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJsaXNhQHNlZWQuY29tIiwiaWF0IjoxNjY0MzAwNDEwLCJleHAiOjE2NjQzMDA2NTB9.xknMyqCwgBH18uZV9Drru2dRxAQGQyiE7C_Gjhl4m9Q",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user?name=ma",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							],
							"query": [
								{
									"key": "name",
									"value": "ma"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, Admin can see specific user\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJsaXNhQHNlZWQuY29tIiwiaWF0IjoxNjY0MzAwNDEwLCJleHAiOjE2NjQzMDA2NTB9.xknMyqCwgBH18uZV9Drru2dRxAQGQyiE7C_Gjhl4m9Q",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"NewUser3\",\n\t\"email\": \"userRegular3@postgmail.com\",\n\t\"password\": \"Password@321\",\n\t\"email_confirmed\": true,\n\t\"is_admin\": false\n\n}"
						},
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete that user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Name deleted\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.users.name).to.eql(\"(deleted)\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJsaXNhQHNlZWQuY29tIiwiaWF0IjoxNjY0MzAwNDEwLCJleHAiOjE2NjQzMDA2NTB9.xknMyqCwgBH18uZV9Drru2dRxAQGQyiE7C_Gjhl4m9Q",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": 5\n}"
						},
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a user name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Name is updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('new name');",
									"});",
									"",
									"pm.test(\"Updated At != Created At\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.updated_at).to.not.eql(jsonData.created_at);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJsaXNhQHNlZWQuY29tIiwiaWF0IjoxNjY0MzAwNDEwLCJleHAiOjE2NjQzMDA2NTB9.xknMyqCwgBH18uZV9Drru2dRxAQGQyiE7C_Gjhl4m9Q",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 2,\n    \"name\": \"new name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has credentials\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.credentials).to.exist;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"email\": \"bart@seed.com\",\n    \"password\": \"Password@123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user/authenticate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"authenticate"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}